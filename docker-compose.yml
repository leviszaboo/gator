services:
  message-bus:
    image: rabbitmq:3-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 30s
      retries: 5

  container-initializer:
    build:
      context: container-initializer
    env_file:
      - container-initializer/.env
    depends_on:
      message-bus:
        condition: service_healthy

    command: yarn start

  apps-api:
    build:
      context: apps-api
    env_file:
      - apps-api/.env
    ports:
      - 3001:3001
    depends_on:
      apps-db:
        condition: service_healthy
      message-bus:
        condition: service_healthy

    command: yarn start

  apps-db:
    image: postgres
    user: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
      - "./apps-api/db-init/init.sql:/docker-entrypoint-initdb.d/init.sql"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db:
    driver: local
